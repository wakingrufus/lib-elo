plugins {
    id 'java'
    id 'idea'
    id "org.jetbrains.kotlin.jvm" version "1.3.21"
    id 'jacoco'
    id 'maven'
    id 'signing'
    id 'io.codearte.nexus-staging' version '0.11.0'
}

repositories {
    mavenCentral()
}

ext {
    pomFile = file("${project.buildDir}/generated-pom.xml")
    isReleaseVersion = !(project.version =~ /-SNAPSHOT$/)
}

version = "0.4.0"
project.group = "com.github.wakingrufus"

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile("io.github.microutils:kotlin-logging:1.6.23")
    compile "org.jetbrains.kotlin:kotlin-reflect"
    compile "org.jsoup:jsoup:1.10.3"

    testCompile "org.jetbrains.kotlin:kotlin-test"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit"
    testCompile 'org.mockito:mockito-core:2.8.9'
    testCompile 'junit:junit:4.12'
    testCompile "com.nhaarman:mockito-kotlin-kt1.1:1.5.0"
    testCompile 'org.slf4j:slf4j-log4j12:1.7.25'
    testCompile "org.assertj:assertj-core:3.11.1"
}

idea {
    project {
        languageLevel = '1.8'
    }
}

wrapper {
    gradleVersion = '5.2'
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

jacocoTestReport.dependsOn test
build.dependsOn jacocoTestReport

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

signing {
    required { signatory != null && project.ext.isReleaseVersion }
    sign configurations.archives
}

nexusStaging {
    packageGroup = "com.github.wakingrufus"
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'lib-elo'
                packaging 'jar'
                group project.group
                version project.version
                // optionally artifactId can be defined here
                description 'A library which performs ELO calculations for a game league (such as chess)'
                url 'https://github.com/wakingrufus/lib-elo'

                scm {
                    connection 'scm:git:https://github.com/wakingrufus/lib-elo.git'
                    developerConnection 'scm:git:https://github.com/wakingrufus/lib-elo.git/'
                    url 'https://github.com/wakingrufus/lib-elo'
                }

                licenses {
                    license {
                        name 'MIT License'
                        url 'https://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        id 'wakingrufus'
                        name 'Rufus'
                        email 'wakingrufus@gmail.com'
                    }
                }
            }
        }
    }
}